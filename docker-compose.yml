

services:

  # MongoDB for your Spring Boot app
  mongodb:
    image: mongo:6.0
    container_name: adoption-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: adoption_db
    volumes:
      - mongo_data:/data/db
    networks:
      - adoption-network

  # Spring Boot Application
  adoption-app:
    build: .
    container_name: adoption-springboot
    depends_on:
      - mongodb
    ports:
      - "8089:8089"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/adoption_db
    networks:
      - adoption-network

  # Jenkins for CI/CD Pipeline
  
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    privileged: true
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
    environment:
      JAVA_OPTS: -Djava.awt.headless=true
    networks:
      - adoption-network
    user: root

  # SonarQube for Code Quality Analysis
  sonarqube:
    image: sonarqube:10.3.0-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_logs:/opt/sonarqube/logs
      - sonar_temp:/opt/sonarqube/temp
    networks:
      - adoption-network
    depends_on:
      - sonar-db
  # PostgreSQL for SonarQube (required)
  sonar-db:
    image: postgres:13
    container_name: sonar-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - adoption-network

  # Nexus Repository Manager for Artifact Storage
  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    networks:
      - adoption-network

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - adoption-network

  # Grafana for Monitoring Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - adoption-network

volumes:
  mongo_data:
  jenkins_home:
  sonar_data:
  sonar_logs:
  sonar_temp:
  postgres_data:
  nexus_data:
  grafana_data:

networks:
  adoption-network:
    driver: bridge